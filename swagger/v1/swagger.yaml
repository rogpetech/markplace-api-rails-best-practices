---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/products/{id}":
    get:
      summary: Retrieve a product
      tags:
      - API:V1::PRODUCTS
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
    patch:
      summary: Update a product
      tags:
      - API:V1::PRODUCTS
      parameters:
      - name: Authorization
        in: header
        description: Authorization token
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: product updated
        '422':
          description: invalid product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    title:
                      type: string
                    price:
                      type: number
    delete:
      summary: Delete a product
      tags:
      - API:V1::PRODUCTS
      parameters:
      - name: Authorization
        in: header
        description: Authorization token
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: product deleted
  "/products":
    get:
      summary: List all products
      tags:
      - API:V1::PRODUCTS
      responses:
        '200':
          description: products listed
    post:
      summary: Create a product
      tags:
      - API:V1::PRODUCTS
      parameters:
      - name: Authorization
        in: header
        description: Authorization token
        required: true
        schema:
          type: string
      responses:
        '201':
          description: product created
        '422':
          description: invalid product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    title:
                      type: string
                    price:
                      type: number
  "/users/{id}":
    get:
      summary: Retrivie a user
      tags:
      - API:V1::USERS
      parameters:
      - name: Accept
        in: header
        description: Add structure for version
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
    delete:
      summary: Delete a user
      tags:
      - API:V1::USERS
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: user deleted
    patch:
      summary: Update a user
      tags:
      - API:V1::USERS
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
  "/users":
    post:
      summary: Create a user
      tags:
      - API:V1::USERS
      parameters: []
      responses:
        '201':
          description: create user
        '422':
          description: create user error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: api.lvh.me:8080
